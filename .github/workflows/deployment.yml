name: CI

on: [push]

env:
  AWS_REGION : "eu-west-1"


jobs:

  Continuous-Integration-Build:
    name: Continuous Integration Build
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0

      - name: Continuous Integration Flyway Clean Migrate
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          redgate/flyway
          -url=jdbc:sqlserver://"${secrets.DB_SERVER_HOST_NAME}";databaseName"${secrets.DB_NAME}"
          -user="${{ secrets.DB_USERNAME }}"
          -password="${{ secrets.DB_PASSWORD }}"
          -cleanDisabled=false clean migrate

  install_dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Install dependencies
        run: |
          npm install
          npm install -g aws-cli
          npm install mysql2

  test_database:
    needs: install_dependencies
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: 'pipelines'
          MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
          MYSQL_USER: 'test_user'
          MYSQL_PASSWORD: 'test_user_password'
        ports:
          - 3306:3306
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Test Database
        run: |
          npm install mysql
          npm test

  AssumeRoleAndCallIdentity:
    needs: test_database
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # This is required for actions/checkout
    runs-on: ubuntu-latest
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1.7.0
        with:
          role-to-assume: arn:aws:iam::263883060207:role/GitHubAction-AssumeRoleWithAction
          #change to reflect your IAM roleâ€™s ARN
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.AWS_REGION }}
      # Hello from AWS: WhoAmI
      - name: Sts GetCallerIdentity
        run: |
          aws sts get-caller-identity


