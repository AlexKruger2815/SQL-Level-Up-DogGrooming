name: CI

on:
  push:

env:
  AWS_REGION: "eu-west-1"
  AWS_IAM_ROLE_ARN: ${{ secrets.AWS_IAM_ROLE_ARN }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_AMI_XXX: ${{ secrets.AWS_AMI_XXX }}                       # Unimplemented
  AWS_SG_XXX: ${{ secrets.AWS_SG_XXX }}                         # Unimplemented
  AWS_SUBNET_XXX: ${{ secrets.AWS_SUBNET_XXX }}                 # Unimplemented

  TF_VAR_db_username: ${{ secrets.DB_USERNAME }}
  TF_VAR_db_password: ${{ secrets.DB_PASSWORD }}
  FW_HOST: ${{ secrets.DB_SERVER_HOST_NAME }}
  FW_NAME: ${{ secrets.DB_NAME }}
  FW_USER: ${{ secrets.DB_USERNAME }}
  FW_PASS: ${{ secrets.DB_PASSWORD }}

permissions:
  id-token: write
  contents: read

jobs:

  TestDB_JS:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests JS
        run: |
          sudo docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=GsM%XIj*i)gUR3wI0" \
          -p 1433:1433 --name sql1 --hostname sql1 \
          -d \
          mcr.microsoft.com/mssql/server:2022-latest
          npm install
          npm i mssql
          npm test

  TestDB_PY:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run tests JS
        run: |
          sudo docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=GsM%XIj*i)gUR3wI0" \
          -p 1433:1433 --name sql1 --hostname sql1 \
          -d \
          mcr.microsoft.com/mssql/server:2022-latest
          pip install pytest
          pip install pyodbc
          pytest tests/